// Generated by view binder compiler. Do not edit!
package com.example.picstar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.picstar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView catText;

  @NonNull
  public final Spinner categorySpinner;

  @NonNull
  public final CheckBox checkbox;

  @NonNull
  public final Button chooseFile;

  @NonNull
  public final EditText editTextTitle;

  @NonNull
  public final Button imageUpButton;

  @NonNull
  public final ImageView toUpImage;

  @NonNull
  public final ProgressBar upProgressBar;

  private ActivityUploadBinding(@NonNull ScrollView rootView, @NonNull TextView catText,
      @NonNull Spinner categorySpinner, @NonNull CheckBox checkbox, @NonNull Button chooseFile,
      @NonNull EditText editTextTitle, @NonNull Button imageUpButton, @NonNull ImageView toUpImage,
      @NonNull ProgressBar upProgressBar) {
    this.rootView = rootView;
    this.catText = catText;
    this.categorySpinner = categorySpinner;
    this.checkbox = checkbox;
    this.chooseFile = chooseFile;
    this.editTextTitle = editTextTitle;
    this.imageUpButton = imageUpButton;
    this.toUpImage = toUpImage;
    this.upProgressBar = upProgressBar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cat_text;
      TextView catText = rootView.findViewById(id);
      if (catText == null) {
        break missingId;
      }

      id = R.id.category_spinner;
      Spinner categorySpinner = rootView.findViewById(id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.checkbox;
      CheckBox checkbox = rootView.findViewById(id);
      if (checkbox == null) {
        break missingId;
      }

      id = R.id.choose_file;
      Button chooseFile = rootView.findViewById(id);
      if (chooseFile == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      EditText editTextTitle = rootView.findViewById(id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.image_up_button;
      Button imageUpButton = rootView.findViewById(id);
      if (imageUpButton == null) {
        break missingId;
      }

      id = R.id.to_up_image;
      ImageView toUpImage = rootView.findViewById(id);
      if (toUpImage == null) {
        break missingId;
      }

      id = R.id.up_progress_bar;
      ProgressBar upProgressBar = rootView.findViewById(id);
      if (upProgressBar == null) {
        break missingId;
      }

      return new ActivityUploadBinding((ScrollView) rootView, catText, categorySpinner, checkbox,
          chooseFile, editTextTitle, imageUpButton, toUpImage, upProgressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
